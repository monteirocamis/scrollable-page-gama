/**
 * Get URL query parameter. If not found, return default value. Similar to PHP's $_GET
 * @param p - parameter name to get
 * @param def - default value if parameter not found
 *
 * @category URL
 */
export declare function getUrlQueryParam(p: string, def?: any): any;
/**
 * Set URL query parameter. If value is null, remove parameter. Similar to PHP's $_GET
 * @param p - parameter name to set
 * @param v - parameter value or null to remove
 * @param reload - reload page after setting parameter, default false. If false, `history.replaceState` is used.
 *
 * @category URL
 */
export declare function setUrlQueryParam(p: string, v: string | null, reload?: boolean): void;
/**
 * Join path parts with separator. Similar to PHP's pathJoin
 * @param parts - path parts
 * @param separator - separator, default '/'
 */
export declare function pathJoin(parts: string[], separator?: string): string;
/**
 * Returns a blob:// URL which points to a javascript file which will call importScripts with the given URL, to be used for cross-origin workers.
 * https://stackoverflow.com/questions/21913673/execute-web-worker-from-different-origin
 * @param url - URL to the worker js file
 * @param wasmURL - optional wasm file URL, will be passed to a created Module.locateFile (for emscripten)
 */
export declare function remoteWorkerURL(url: string, wasmURL?: string): string;
//# sourceMappingURL=url.d.ts.map