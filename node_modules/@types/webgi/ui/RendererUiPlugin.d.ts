import { AViewerPlugin } from 'webgi/core/AViewerPlugin';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
import { UiObjectConfig } from 'webgi/interfaces';
export declare class RendererUiPlugin extends AViewerPlugin<''> {
    static readonly PluginType = "RendererParamsUiPlugin";
    enabled: boolean;
    uiConfig?: UiObjectConfig;
    static readonly MaxCanvasScale = 4;
    protected _serializeVersion: number;
    /**
     * Full mode will set the size to 100% of the container, and scale the canvas to the scale value.
     * Custom mode will set the size to the width and height values, and scale the canvas to fit in the container.
     */
    mode: 'full' | 'custom';
    width: number;
    height: number;
    scale: number;
    constructor();
    refreshSize(): void;
    private _sizeChanged;
    private _setScale;
    private _scaleChanged;
    onAdded(viewer: ViewerApp): Promise<void>;
    onRemove(viewer: ViewerApp): Promise<void>;
    private _refresh;
    fromJSON(data: any, meta?: any): this | Promise<this | null> | null;
    toJSON(meta?: any): any;
}
//# sourceMappingURL=RendererUiPlugin.d.ts.map