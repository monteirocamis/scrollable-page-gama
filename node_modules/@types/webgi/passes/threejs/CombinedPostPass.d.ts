import { WebGLMultipleRenderTargets, WebGLRenderer, WebGLRenderTarget } from 'three';
import { ShaderPass2 } from './ShaderPass2';
import { UiObjectConfig } from 'webgi/interfaces';
export declare class CombinedPostPass extends ShaderPass2 {
    uiConfig?: UiObjectConfig;
    private _lastReadBuffer?;
    constructor(screenShader: string[]);
    render(renderer: WebGLRenderer, writeBuffer: WebGLMultipleRenderTargets | WebGLRenderTarget | null, readBuffer?: WebGLMultipleRenderTargets | WebGLRenderTarget, deltaTime?: number, maskActive?: boolean): void;
    reRender(renderer: WebGLRenderer, writeBuffer: WebGLMultipleRenderTargets | WebGLRenderTarget | null, deltaTime?: number, maskActive?: boolean): void;
    dispose(): void;
}
//# sourceMappingURL=CombinedPostPass.d.ts.map