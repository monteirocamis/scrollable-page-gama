import { BufferGeometry, ShaderMaterial } from 'three';
import { IRenderer } from 'webgi/interfaces';
import { IDisposable } from 'ts-browser-helpers';
export declare class CubeNormalsCaptureHelper implements IDisposable {
    private _renderer;
    private _scene;
    private _mesh;
    private _normalsCache;
    /**
     * Automatically dispose targets when all attached geometries are disposed.
     * Set `false` to keep targets even if no geometry is using it/attached to it.
     */
    static AutoDisposeTargets: boolean;
    constructor(renderer: IRenderer);
    dispose(): void;
    disposeTarget(cacheKey: string): void;
    disposeAllTargets(): void;
    hasCapturedNormalMap(geometry: BufferGeometry): boolean;
    captureNormalMap(geometry: BufferGeometry, cacheKey?: string, size?: number): boolean;
}
export declare class NormalCaptureMaterial extends ShaderMaterial {
    constructor();
}
//# sourceMappingURL=CubeNormalsCaptureHelper.d.ts.map