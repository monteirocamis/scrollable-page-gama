import { AViewerPlugin } from 'webgi/core/AViewerPlugin';
import { CameraView, CameraViewPlugin } from 'webgi/plugins/CameraViewPlugin';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
import { EasingFunctionType } from 'webgi/helpers/animation';
export declare class CameraViewControlPlugin extends AViewerPlugin<'enableChanged'> {
    static readonly PluginType: string;
    enabled: boolean;
    /**
     * {@link EasingFunctions}
     */
    animEase: EasingFunctionType;
    private _onEnabledChanged1;
    protected _onEnabledChanged(): void;
    constructor(enabled?: boolean);
    protected get _cameraViews(): CameraView[];
    interpolateMode: 'spherical' | 'linear';
    enableDamping: boolean;
    damping: number;
    initAnimationTime: number;
    dependencies: (typeof CameraViewPlugin)[];
    setState(state: number): void;
    onAdded(viewer: ViewerApp): Promise<void>;
    onRemove(viewer: ViewerApp): Promise<void>;
    private _currentState;
    private _oldState;
    private _overrideStartView?;
    private _overrideEndView?;
    private _overrideTime;
    private _preFrame1;
    protected _preFrame(ev: any): void;
    private _lerpViewsLinear;
    private _lerpViewsSpherical;
    private _animateCameraToView;
}
//# sourceMappingURL=CameraViewControlPlugin.d.ts.map