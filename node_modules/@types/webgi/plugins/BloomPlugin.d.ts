import { IGBufferUpdater, IViewerPlugin, UiObjectConfig } from 'webgi/interfaces';
import { BloomPass } from '../passes/threejs/BloomPass';
import { GenericFilterPlugin } from './GenericFilterPlugin';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
import { Material, Object3D, Vector4 } from 'three';
import { MaterialExtension } from 'webgi/extras/asset_manager/threejs/MaterialExtender';
export declare function addBloomData(material: Material): boolean;
export declare class BloomPlugin extends GenericFilterPlugin<BloomPass, 'bloom', '', ViewerApp> implements IViewerPlugin, IGBufferUpdater {
    static readonly PluginType = "Bloom";
    passId: 'bloom';
    protected _beforeFilters: string[];
    protected _afterFilters: string[];
    protected _requiredFilters: string[];
    setDirty(): void;
    private _getUiConfig;
    readonly materialExtension: MaterialExtension;
    passCtor(v: ViewerApp): BloomPass;
    onAdded(viewer: ViewerApp): Promise<void>;
    updateGBuffer(object: Object3D, data: Vector4): void;
    protected _update(v: ViewerApp): boolean;
    get uiConfig(): UiObjectConfig | undefined;
}
//# sourceMappingURL=BloomPlugin.d.ts.map