import { AViewerPlugin } from 'webgi/core/AViewerPlugin';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
import { AnimationClip, Object3D } from 'three';
/**
 * AnimationHelperPlugin is used internally by plugins to keep track of all helpers and allows to animate its clips
 * For internal use only at the moment.
 */
export declare class CustomAnimationHelperPlugin extends AViewerPlugin<''> {
    enabled: boolean;
    static readonly PluginType = "AnimationHelperPlugin";
    /**
     * It stores all the helpers as the value with its appropriate names as the key
     */
    helperIdentities: Map<any, any>;
    constructor();
    /**
     * It is used by Parent Class(no need to change the parameter)
     * @param viewer - default viewer that is maintained through out the api(no need to change the parameter)
     */
    onAdded(viewer: ViewerApp): Promise<void>;
    /**
     * Creates a new AnimationHelper that manages its own state
     * @param id - helper name of the model
     * @param model - 3d model to pass on
     */
    createHelper(id: string, model: Object3D): void;
    /**
     * returns the animationClips of the 3D model
     * @param id - helper name of the model
     * @returns
     */
    getAnimationClips(id: string): any;
    /**
     * Plays the single clip from the Helper of a 3D model
     * @param id - helper name of 3D model
     * @param clip - Animation Clip of the 3D model that needs to be played
     * @param loop - default is 'false', if the clip needs to be looped continously then set it to 'true'
     * @param timescale - timescale of the animation clip that will played. Default is 1
     * @param reverse - to reverse the clip set it to true. Default is false
     * @param resetTime - resets the mixer time. Default is false
     */
    playClip(id: string, clip: AnimationClip, loop: boolean, timescale?: number, reverse?: boolean, resetTime?: boolean): Promise<void>;
    /**
     * Plays all the animation clips that are present in the 3D model
     * @param id - helper name of 3D model
     * @param loop - default is 'false', if the clip needs to be looped continously then set it to 'true'
     */
    playAllAnimations(id: string, loop: boolean): Promise<void>;
    /**
     * Reverses all the animation clips that are present in the 3D model
     * @param id - helper name of 3D model
     * @param loop - default is 'false', if the clip needs to be looped continously then set it to 'true'
     */
    playAllAnimationsInReverse(id: string, loop: boolean): Promise<void>;
    /**
     * Plays the clip by its name from the Helper of a 3D model
     * @param id - helper name of 3D model
     * @param name - name of the animation clip that is present in 3D model
     * @param loop - default is 'false', if the clip needs to be looped continously then set it to 'true'
     * @param timescale - timescale of the animation clip that will played. Default is 1
     * @param reverse - to reverse the clip set it to true. Default is false
     */
    playAnimationByName(id: string, name: string, loop: false, timescale?: number, reverse?: boolean): Promise<void>;
}
//# sourceMappingURL=CustomAnimationHelperPlugin.d.ts.map