import { AViewerPlugin } from 'webgi/core/AViewerPlugin';
import { IMaterial, IViewerPlugin } from 'webgi/interfaces';
import { Vector4 } from 'three';
import { MaterialExtension } from 'webgi/extras/asset_manager/threejs/MaterialExtender';
import { AssetManagerPlugin } from 'webgi/extras/asset_manager/AssetManagerPlugin';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
import { GBufferPlugin } from 'webgi/plugins/GBufferPlugin';
export declare class FragmentClippingExtensionPlugin extends AViewerPlugin<''> implements IViewerPlugin {
    static readonly PluginType = "FragmentClippingExtensionPlugin1";
    enabled: boolean;
    dependencies: (typeof AssetManagerPlugin | typeof GBufferPlugin)[];
    private _plane;
    private _viewNormalMatrix;
    private _defines;
    private _uniforms;
    static AddFragmentClipping(material: IMaterial, position?: Vector4, params?: Vector4, mode?: FragmentClippingMode, invert?: boolean): boolean;
    readonly materialExtension: MaterialExtension;
    setDirty: () => void;
    private _loaderCreate;
    constructor();
    onAdded(v: ViewerApp): Promise<void>;
    onRemove(v: ViewerApp): Promise<void>;
    static readonly FRAGMENT_CLIPPING_EXTENSION_GLTF_EXTENSION = "WEBGI_materials_fragment_clipping_extension";
}
export declare enum FragmentClippingMode {
    Circle = 0,
    Ellipse = 1,
    Rectangle = 2,
    Plane = 3,
    Sphere = 4
}
//# sourceMappingURL=FragmentClippingExtensionPlugin.d.ts.map