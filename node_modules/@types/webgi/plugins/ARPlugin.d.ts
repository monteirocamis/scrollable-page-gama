/// <reference types="webxr" />
import { AViewerPlugin } from 'webgi/core/AViewerPlugin';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
import { GBufferPlugin } from 'webgi/plugins/GBufferPlugin';
export declare class ARPlugin extends AViewerPlugin<''> {
    static readonly PluginType = "WEBXR_ARPlugin";
    enabled: boolean;
    private _xrManager?;
    private _xrSession?;
    private _hitTestSource?;
    private _touchInputHelper;
    private _xrLight?;
    dependencies: (typeof GBufferPlugin)[];
    domOverlay?: {
        root: HTMLElement;
    };
    estimateLighting: boolean;
    placeOnWall: boolean;
    xrResolutionScale: number;
    toJSON: any;
    onAdded(viewer: ViewerApp): Promise<void>;
    enterAR: () => void;
    exitAR: () => void;
    private _placementBox?;
    private _preRender;
    private _postRender;
    private _frameCount;
    private _isPresenting;
    private _preFrame;
    private _updateShadow;
    moveToFloor(xrFrame: XRFrame): void;
    private _preXRState;
    private _removePlacementBox;
    private _savePreXRState;
    private _preSetupModel;
    private _xrRenderingBegin;
    private _xrRenderingEnd;
    private _restorePreXRState;
    private _cancelHitSources;
    private _onSessionStarted;
    private _onSessionEnded;
}
//# sourceMappingURL=ARPlugin.d.ts.map