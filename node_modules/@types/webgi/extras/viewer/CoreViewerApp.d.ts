import { IViewerAppOptions, ViewerApp } from 'webgi/viewer/ViewerApp';
import { IViewerApp } from 'webgi/interfaces';
/**
 * ViewerApp with base plugins
 * @example
 * ```
 * const viewer = new CoreViewerApp({canvas: document.getElementById('mcanvas')})
 * await viewer.initialize({caching: true, ground: true, bloom: true, depthTonemap: true, enableDrop: false, importPopup: false, debug: false})
 * ```
 */
export declare class CoreViewerApp extends ViewerApp {
    constructor(options: IViewerAppOptions);
    initialize({ caching, ground, bloom, depthTonemap, enableDrop, importPopup, debug }?: {
        caching?: boolean | undefined;
        ground?: boolean | undefined;
        bloom?: boolean | undefined;
        depthTonemap?: boolean | undefined;
        enableDrop?: boolean | undefined;
        importPopup?: boolean | undefined;
        debug?: boolean | undefined;
    }): Promise<this>;
}
export declare function addBasePlugins(viewer: IViewerApp, { ground, bloom, depthTonemap, enableDrop, importPopup }?: {
    ground?: boolean | undefined;
    bloom?: boolean | undefined;
    depthTonemap?: boolean | undefined;
    enableDrop?: boolean | undefined;
    importPopup?: boolean | undefined;
}): Promise<void>;
//# sourceMappingURL=CoreViewerApp.d.ts.map