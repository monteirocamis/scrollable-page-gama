import { GLTFExporter, GLTFExporterOptions, GLTFExporterPlugin, GLTFWriter } from 'three/examples/jsm/exporters/GLTFExporter';
import { IExportParser } from 'webgi/extras/asset_manager/AssetManager';
import { GLTFWriter2 } from 'webgi/extras/asset_manager/exporter/threejs/exporters/GLTFWriter2';
import { Object3D } from 'three';
export type GLTFExporter2Options = GLTFExporterOptions & {
    encrypt?: boolean;
    encryptKey?: string | Uint8Array;
    embedUrlImages?: boolean;
    embedUrlImagePreviews?: boolean;
    exportExt?: string;
    preserveUUIDs?: boolean;
    externalImagesInExtras?: boolean;
    encodeUint16Rgbe?: boolean;
    jsonSpaces?: number;
};
export declare class GLTFExporter2 extends GLTFExporter implements IExportParser {
    register(callback: (writer: GLTFWriter & GLTFWriter2) => GLTFExporterPlugin): this;
    parseAsync(obj: any, options: GLTFExporter2Options): Promise<Blob>;
    parse(input: Object3D | Object3D[], onDone: (gltf: ArrayBuffer | {
        [key: string]: any;
    }) => void, onError: (error: ErrorEvent) => void, options?: GLTFExporter2Options): any;
}
//# sourceMappingURL=GLTFExporter2.d.ts.map