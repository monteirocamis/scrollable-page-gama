import { Importer } from 'webgi/extras/asset_manager/importer/threejs/Importer';
import { GLTFLoader2 } from 'webgi/extras/asset_manager/importer/threejs/loaders/GLTFLoader2';
import { GLTFParser } from 'three/examples/jsm/loaders/GLTFLoader';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
export declare const viewerGLTFExtension = "WEBGI_viewer";
export declare function addGLTFLoader(viewer: ViewerApp): Importer<GLTFLoader2>;
export declare const webgiLightExtrasExtension = "WEBGI_light_extras";
export declare const webgiObject3DExtrasExtension = "WEBGI_object3d_extras";
export declare const webgiMaterialExtrasExtension = "WEBGI_material_extras";
export declare const GLTFMaterialsBumpMapExtensionName = "WEBGI_materials_bumpmap";
export declare const GLTFMaterialsDisplacementMapExtensionName = "WEBGI_materials_displacementmap";
export declare const GLTFMaterialsAlphaMapExtensionName = "WEBGI_materials_alphamap";
export declare const GLTFMaterialsLightMapExtensionName = "WEBGI_materials_lightmap";
/**
 * Bump Map Extension
 *
 * bumpTexture and bumpScale are added to the material
 *
 * Specification: https://webgi.xyz/docs/gltf-extensions/WEBGI_materials_bumpmap.html
 */
declare class GLTFMaterialsBumpMapExtension {
    parser: GLTFParser;
    name: string;
    constructor(parser: GLTFParser);
    extendMaterialParams(materialIndex: number, materialParams: any): Promise<void | void[]>;
}
export type { GLTFMaterialsBumpMapExtension };
/**
 * Displacement Map Extension
 *
 * displacementTexture and displacementScale are added to the material
 *
 * Specification: https://webgi.xyz/docs/gltf-extensions/WEBGI_materials_displacementmap.html
 */
declare class GLTFMaterialsDisplacementMapExtension {
    parser: GLTFParser;
    name: string;
    constructor(parser: GLTFParser);
    extendMaterialParams(materialIndex: number, materialParams: any): Promise<void | void[]>;
}
export type { GLTFMaterialsDisplacementMapExtension };
/**
 * Light Map Extension
 *
 * lightMapTexture and lightMapIntensity are added to the material
 *
 * Specification: https://webgi.xyz/docs/gltf-extensions/WEBGI_materials_lightmap.html
 */
declare class GLTFMaterialsLightMapExtension {
    parser: GLTFParser;
    name: string;
    constructor(parser: GLTFParser);
    extendMaterialParams(materialIndex: number, materialParams: any): Promise<void | void[]>;
}
export type { GLTFMaterialsLightMapExtension };
/**
 * Alpha Map Extension
 *
 * alphaTexture is added to the material
 * This is separate from the alpha in base color texture. This is used when that is not supported in the viewer
 *
 * Specification: https://webgi.xyz/docs/gltf-extensions/WEBGI_materials_alphamap.html
 */
declare class GLTFMaterialsAlphaMapExtension {
    parser: GLTFParser;
    name: string;
    constructor(parser: GLTFParser);
    extendMaterialParams(materialIndex: number, materialParams: any): Promise<void | void[]>;
}
export type { GLTFMaterialsAlphaMapExtension };
//# sourceMappingURL=gltf.d.ts.map