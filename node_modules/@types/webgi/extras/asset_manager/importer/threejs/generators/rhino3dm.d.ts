import { IViewerPlugin } from 'webgi/interfaces';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
import { SimpleEventDispatcher } from 'ts-browser-helpers';
import { AssetManagerPlugin } from 'webgi/extras/asset_manager/AssetManagerPlugin';
import { Rhino3dmLoader } from 'three/examples/jsm/loaders/3DMLoader';
import { LoadingManager, Material, Object3D } from 'three';
export declare class Rhino3dmLoader2 extends Rhino3dmLoader {
    static LIBRARY_PATH: string;
    constructor(manager?: LoadingManager);
    static ImportMaterials: boolean;
    materials: Material[];
    _createMaterial(material: any): Material;
    private _compareMaterials;
    loadAsync(url: string, onProgress?: (event: ProgressEvent) => void): Promise<Object3D>;
    private _useMaterialSource;
    static ReplaceWithInstancedMesh: boolean;
    private _useInstancedMesh;
}
export declare class Rhino3dmLoadPlugin extends SimpleEventDispatcher<''> implements IViewerPlugin<ViewerApp> {
    static readonly PluginType = "Rhino3dmLoadPlugin";
    dependencies: (typeof AssetManagerPlugin)[];
    private _importer;
    onAdded(viewer: ViewerApp): Promise<void>;
    onDispose(viewer: ViewerApp): Promise<void>;
    onRemove(viewer: ViewerApp): Promise<void>;
}
//# sourceMappingURL=rhino3dm.d.ts.map