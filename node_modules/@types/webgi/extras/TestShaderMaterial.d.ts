import { AShaderMaterial2 } from 'webgi/passes/threejs/ShaderPass2';
import { ColorRepresentation } from 'three';
import { UiObjectConfig } from 'webgi/interfaces';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
export interface SampleShaderMaterialParameters {
    color?: ColorRepresentation;
    intensity?: number;
}
/**
 * A sample boilerplate for wrapping a shader material from three.js.
 */
export declare class SampleShaderMaterial extends AShaderMaterial2 {
    static readonly TypeSlug = "mymat";
    readonly typeSlug = "mymat";
    static readonly TYPE = "SampleShaderMaterial";
    constructor(parameters?: SampleShaderMaterialParameters);
    setParameters(parameters: SampleShaderMaterialParameters): void;
    toJSON(meta?: any): any;
    fromJSON(data: any, meta?: any): this | null;
    copyProps(oldMaterial: any): this;
    uiConfig: UiObjectConfig;
}
/**
 * Sample usage code for SampleShaderMaterial, call it after the viewer is initialized.
 */
export declare function setupSampleShaderMaterial(viewer: ViewerApp): Promise<void>;
//# sourceMappingURL=TestShaderMaterial.d.ts.map