import { Quaternion, Vector2 } from 'three';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
import { IInputDevice } from 'webgi/extras/devices/InputDevice';
export declare class GyroInputDevice implements IInputDevice {
    screenOrientation: any;
    deviceOrientation?: DeviceOrientationEvent;
    permissionMessage?: HTMLDivElement;
    private _viewer;
    constructor(viewer: ViewerApp);
    getOffsetFromCenter(initialIdentity?: boolean): Vector2;
    getQuaternion(initialIdentity: boolean, quat?: Quaternion): Quaternion;
    private readonly _zee;
    private readonly _euler;
    private readonly _q0;
    private readonly _q1;
    private readonly _q2;
    private _initQuaternionDest;
    protected _toQuaternion(quat: Quaternion, alpha: number, beta: number, gamma: number, orient: number, initialIdentity: boolean): Quaternion;
    static IsCompatible(): boolean;
    onScreenOrientationChangeEvent: () => void;
    onDeviceOrientationChangeEvent: (event: DeviceOrientationEvent) => void;
    addPermissionMessage(): void;
    private _isConnected;
    connect(): boolean | undefined;
    askPermission(): void;
    disconnect(): void;
}
//# sourceMappingURL=GyroInputDevice.d.ts.map